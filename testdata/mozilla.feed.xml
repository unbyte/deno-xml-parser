<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
                                           xmlns:content="http://purl.org/rss/1.0/modules/content/"
                                           xmlns:wfw="http://wellformedweb.org/CommentAPI/"
                                           xmlns:dc="http://purl.org/dc/elements/1.1/"
                                           xmlns:atom="http://www.w3.org/2005/Atom"
                                           xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
                                           xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
>

    <channel>
        <title>The Mozilla Blog</title>
        <atom:link href="https://blog.mozilla.org/feed/" rel="self" type="application/rss+xml" />
        <link>https://blog.mozilla.org</link>
        <description>Dispatches from the Internet frontier.</description>
        <lastBuildDate>Fri, 19 Mar 2021 09:55:27 +0000</lastBuildDate>
        <language>en-US</language>
        <sy:updatePeriod>hourly</sy:updatePeriod>
        <sy:updateFrequency>1</sy:updateFrequency>
        <generator>https://wordpress.org/?v=5.6.2</generator>
        <item>
            <title>Reinstating net neutrality in the US</title>
            <link>https://blog.mozilla.org/blog/2021/03/19/reinstating-net-neutrality-in-the-us/</link>
            <pubDate>Fri, 19 Mar 2021 09:55:27 +0000</pubDate>
            <dc:creator><![CDATA[Amy Keating]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12972</guid>
            <description><![CDATA[<p>Today, Mozilla together with other internet companies ADT, Dropbox, Eventbrite, Reddit, Vimeo, Wikimedia, sent a letter to the FCC asking the agency to reinstate net neutrality as a matter of &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/03/19/reinstating-net-neutrality-in-the-us/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/03/19/reinstating-net-neutrality-in-the-us/">Reinstating net neutrality in the US</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p>Today, Mozilla together with other internet companies ADT, Dropbox, Eventbrite, Reddit, Vimeo, Wikimedia, <a href="https://blog.mozilla.org/wp-content/uploads/2021/03/Letter-to-the-FCC-to-reinstate-net-neutrality-March-2021.pdf">sent a letter to the FCC</a> asking the agency to reinstate net neutrality as a matter of urgency.</p>
<p>For almost a decade, Mozilla has defended user access to the internet, in the US and <a href="https://blog.mozilla.org/netpolicy/files/2020/08/Mexico-Net-Neutrality-Filing-031020-formatted_filed.pdf">around the world</a>. Our work to preserve net neutrality has been a critical part of that effort, including our <a href="https://blog.mozilla.org/blog/2018/01/16/mozilla-files-suit-fcc-protect-net-neutrality/">lawsuit against the Federal Communications Commission (FCC) to keep these protections in place for users in the US</a>.</p>
<p>With the recent appointment of Acting Chairwoman Jessica Rosenworcel to lead the agency, there will be a new opportunity to establish net neutrality rules at the federal level in the near future, ensuring that families and businesses across the country can enjoy these fundamental rights.</p>
<p>Net neutrality preserves the environment that allowed the internet to become an engine for economic growth. In a marketplace where users frequently do not have access to more than one internet service provider (ISP), these rules ensure that data is treated equally across the network by gatekeepers. More specifically, net neutrality prevents ISPs from leveraging their market power to slow, block, or prioritize content&#8211;ensuring that users can freely access ideas and services without unnecessary roadblocks. Without these rules in place, ISPs can make it more difficult for new ideas or applications to succeed, potentially stifling innovation across the internet.</p>
<p>The need for net neutrality protections has become even more apparent during the pandemic. In a moment where classrooms and offices have moved online by necessity, it is critically important to have rules paired with strong government oversight and enforcement to protect families and businesses from predatory practices. In California, residents will have the benefit of these fundamental safeguards as a result of a <a href="https://www.washingtonpost.com/technology/2021/02/23/net-neutrality-law-take-effect-california-after-judge-deals-blow-telecom-industry/">recent court decision</a> that will allow the state to enforce its state net neutrality law. However, we believe that users nationwide deserve the same ability to control their own online experiences.</p>
<p>While there are many challenges that need to be resolved to fix the internet, reinstating net neutrality is a crucial down payment on the much broader internet reform that we need. Net neutrality is good for people and for personal expression. It is good for business, for innovation, for our economic recovery. It is good for the internet. It has long <a href="https://www.publicconsultation.org/wp-content/uploads/2017/12/Net_Neutrality_Quaire_121217.pdf">enjoyed bipartisan support among the American public</a>. There is no reason to further delay its reinstatement once the FCC is in working order.</p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/03/19/reinstating-net-neutrality-in-the-us/">Reinstating net neutrality in the US</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Notes on Addressing Supply Chain Vulnerabilities</title>
            <link>https://blog.mozilla.org/blog/2021/02/27/notes-on-addressing-supply-chain-vulnerabilities/</link>
            <pubDate>Sat, 27 Feb 2021 22:41:11 +0000</pubDate>
            <dc:creator><![CDATA[Eric Rescorla]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12967</guid>
            <description><![CDATA[<p>Addressing Supply Chain Vulnerabilities One of the unsung achievements of modern software development is the degree to which it has become componentized: not that long ago, when you wanted to &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/27/notes-on-addressing-supply-chain-vulnerabilities/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/27/notes-on-addressing-supply-chain-vulnerabilities/">Notes on Addressing Supply Chain Vulnerabilities</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p><main class="tmpl-post"></p>
<h1><img loading="lazy" class="alignleft size-thumbnail wp-image-12607" src="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg" alt="" width="150" height="150" srcset="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg 150w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-300x300.jpg 300w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res.jpg 500w" sizes="(max-width: 150px) 100vw, 150px" />Addressing Supply Chain Vulnerabilities</h1>
<p>One of the unsung achievements of modern software development is the degree to which it has become componentized: not that long ago, when you wanted to write a piece of software you had to write pretty much the whole thing using whatever tools were provided by the language you were writing in, maybe with a few specialized libraries like <a href="https://www.openssl.org/">OpenSSL</a>. No longer. The combination of newer languages, Open Source development and easy-to-use package management systems like JavaScript&#8217;s <a href="https://www.npmjs.com/">npm</a> or Rust&#8217;s <a href="https://crates.io/">Cargo/crates.io</a> has revolutionized how people write software, making it standard practice to pull in third party libraries even for the <a href="https://www.npmjs.com/package/left-pad">simplest tasks</a>; it&#8217;s not at all uncommon for programs to depend on hundreds or thousands of third party packages.</p>
<h1 id="supply-chain-attacks">Supply Chain Attacks </h1>
<p>While this new paradigm has revolutionized software development, it has also greatly increased the risk of supply chain attacks, in which an attacker compromises one of your dependencies and through that your software.<sup class="footnote-ref"><a id="fnref1" href="#fn1">[1]</a></sup> A famous example of this is provided by the 2018 <a href="https://www.theregister.com/2018/11/26/npm_repo_bitcoin_stealer/">compromise</a> of the <code>event-stream</code> package to steal Bitcoin from people&#8217;s computers. The Register&#8217;s brief history provides a sense of the scale of the problem:</p>
<blockquote><p>Ayrton Sparling, a computer science student at California State University, Fullerton (FallingSnow on GitHub), flagged the problem last week in a GitHub issues post. According to Sparling, a commit to the event-stream module added flatmap-stream as a dependency, which then included injection code targeting another package, ps-tree.</p></blockquote>
<p>There are a number of ways in which an attacker might manage to inject malware into a package. In this case, what seems to have happened is that the original maintainer of event-stream was no longer working on it and someone else volunteered to take it over. Normally, that would be great, but here it seems that volunteer was malicious, so it&#8217;s not great.</p>
<h1 id="standards-for-critical-packages">Standards for Critical Packages </h1>
<p>Recently, Eric Brewer, Rob Pike, Abhishek Arya, Anne Bertucio and Kim Lewandowski posted a <a href="https://security.googleblog.com/2021/02/know-prevent-fix-framework-for-shifting.html">proposal</a> on the Google security blog for addressing vulnerabilities in Open Source software. They cover a number of issues including vulnerability management and security of compilation, and there&#8217;s a lot of good stuff here, but the part that has received the most attention is the suggestion that certain packages should be designated &#8220;critical&#8221;<sup class="footnote-ref"><a id="fnref2" href="#fn2">[2]</a></sup>:</p>
<blockquote><p>For software that is critical to security, we need to agree on development processes that ensure sufficient review, avoid unilateral changes, and transparently lead to well-defined, verifiable official versions.</p></blockquote>
<p>These are good development practices, and ones we follow here at Mozilla, so I certainly encourage people to adopt them. However, trying to require them for critical software seems like it will have some problems.</p>
<h2 id="it-creates-friction-for-the-package-developer">It creates friction for the package developer </h2>
<p>One of the real benefits of this new model of software development is that it&#8217;s low friction: it&#8217;s easy to develop a library and make it available &#8212; you just write it put it up on a package repository like <a href="http://crates.io">crates.io</a> &#8212; and it&#8217;s easy to use those packages &#8212; you just add them to your build configuration. But then you&#8217;re successful and suddenly your package <em>is</em> widely used and gets deemed &#8220;critical&#8221; and now you have to put in place all kinds of new practices. It probably would be better if you did this, but what if you don&#8217;t? At this point your package is widely used &#8212; or it wouldn&#8217;t be critical &#8212; so what now?</p>
<h2 id="it's-not-enough">It&#8217;s not enough</h2>
<p>Even packages which are well maintained and have good development practices routinely have vulnerabilities. For example, Firefox recently released a new <a href="https://www.mozilla.org/en-US/firefox/85.0.1/releasenotes/">version</a> that fixed a <a href="https://www.mozilla.org/en-US/security/advisories/mfsa2021-06/">vulnerability</a> in the popular <a href="https://chromium.googlesource.com/angle/angle">ANGLE</a> graphics engine, which is maintained by Google. Both Mozilla and Google follow the practices that this blog post recommends, but it&#8217;s just the case that people make mistakes. To (possibly mis)quote <a href="https://www.cs.columbia.edu/~smb/">Steve Bellovin</a>, &#8220;Software has bugs. Security-relevant software has security-relevant bugs&#8221;. So, while these practices are important to reduce the risk of vulnerabilities, we know they can&#8217;t eliminate them.</p>
<p>Of course this applies to inadvertant vulnerabilities, but what about malicious actors (though note that Brewer et al. observe that &#8220;Taking a step back, although supply-chain attacks are a risk, the vast majority of vulnerabilities are mundane and unintentional—honest errors made by well-intentioned developers.&#8221;)? It&#8217;s possible that some of their proposed changes (in particular forbidding anonymous authors) might have an impact here, but it&#8217;s really hard to see how this is actionable. What&#8217;s the standard for not being anonymous? That you have an e-mail address? A Web page? A <a href="https://www.dnb.com/duns-number.html">DUNS number</a>?<sup class="footnote-ref"><a id="fnref3" href="#fn3">[3]</a></sup> None of these seem particularly difficult for a dedicated attacker to fake and of course the more strict you make the requirements the more it&#8217;s a burden for the (vast majority) of legitimate developers.</p>
<p>I do want to acknowledge at this point that Brewer et al. clearly state that multiple layers of protection needed and that it&#8217;s necessary to have robust mechanisms for handling vulnerability defenses. I agree with all that, I&#8217;m just less certain about this particular piece.</p>
<h1 id="redefining-critical">Redefining Critical</h1>
<p>Part of the difficulty here is that there are ways in which a piece of software can be &#8220;critical&#8221;:</p>
<ul>
<li>It can do something which is inherently security sensitive (e.g., the OpenSSL SSL/TLS stack which is responsible for securing a huge fraction of Internet traffic).</li>
<li>It can be widely used (e.g., the Rust <a href="https://crates.io/crates/log">log</a>) crate, but not inherently that sensitive.</li>
</ul>
<p>The vast majority of packages &#8212; widely used or not &#8212; fall into the second category: they do something important but that isn&#8217;t security critical. Unfortunately, because of the way that software is generally built, this doesn&#8217;t matter: even when software is built out of a pile of small components, when they&#8217;re packaged up into a single program, each component has all the privileges that that program has. So, for instance, suppose you include a component for doing statistical calculations: if that component is compromised nothing stops it from opening up files on your disk and stealing your passwords or Bitcoins or whatever. This is true whether the compromise is due to an inadvertant vulnerability or malware injected into the package: a problem in any component compromises the whole system.<sup class="footnote-ref"><a id="fnref4" href="#fn4">[4]</a></sup> Indeed, minor non-security components make attractive targets because they may not have had as much scrutiny as high profile security components.</p>
<h1 id="least-privilege-in-practice%3A-better-sandboxing">Least Privilege in Practice: Better Sandboxing</h1>
<p>When looked at from this perspective, it&#8217;s clear that we have a technology problem: There&#8217;s no good reason for individual components to have this much power. Rather, they should only have the capabilities they need to do the job they are intended to to (the technical term is <a href="https://en.wikipedia.org/wiki/Principle_of_least_privilege">least privilege</a>); it&#8217;s just that the software tools we have don&#8217;t do a good job of providing this property. This is a situation which has long been recognized in complicated pieces of software like Web browsers, which employ a technique called &#8220;process sandboxing&#8221; (pioneered by Chrome) in which the code that interacts with the Web site is run in its own &#8220;sandbox&#8221; and has limited abilities to interact with your computer. When it wants to do something that it&#8217;s not allowed to do, it talks to the main Web browser code and asks it to do it for it, thus allowing that code to enforce the rules without being exposed to vulnerabilities in the rest of the browser.</p>
<p>Process sandboxing is an important and powerful tool, but it&#8217;s a heavyweight one; it&#8217;s not practical to separate out every subcomponent of a large program into its own process. The good news is that there are several recent technologies which do allow this kind of fine-grained sandboxing, both based on <a href="https://webassembly.org/">WebAssembly</a>. For WebAssembly programs, <a href="https://hacks.mozilla.org/2019/11/announcing-the-bytecode-alliance/">nanoprocesses</a> allow individual components to run in their own sandbox with component-specific access control lists. More recently, we have been <a href="https://hacks.mozilla.org/2020/02/securing-firefox-with-webassembly/">experimenting</a> with a technology called called <a href="https://rlbox.dev/">RLBox</a> developed by researchers at UCSD, UT Austin, and Stanford which allows regular programs such as Firefox to run sandboxed components. The basic idea behind both of these is the same: use static compilation techniques to ensure that the component is memory-safe (i.e., cannot reach outside of itself to touch other parts of the program) and then give it only the capabilities it needs to do its job.</p>
<p>Techniques like this point the way to a scalable technical approach for protecting yourself from third party components: each component is isolated in its own sandbox and comes with a list of the capabilities that it needs (often called a <em>manifest</em>) with the compiler enforcing that it has no other capabilities (this is not too dissimilar from &#8212; but much more granular than &#8212; the permissions that mobile applications request). This makes the problem of including a new component much simpler because you can just look at the capabilities it requests, without needing verify that the code itself is behaving correctly.</p>
<h1 id="making-auditing-easier">Making Auditing Easier</h1>
<p>While powerful, sandboxing itself &#8212; whether of the traditional process or WebAssembly variety &#8212; isn&#8217;t enough, for two reasons. First, the APIs that we have to work with aren&#8217;t sufficiently fine-grained. Consider the case of a component which is designed to let you open and process files on the disk; this necessarily needs to be able to open files, but what stops it from reading your Bitcoins instead of the files that the programmer wanted it to read? It might be possible to create a capability list that includes just reading certain files, but that&#8217;s not the API the operating system gives you, so now we need to invent something. There are a lot of cases like this, so things get complicated.</p>
<p>The second reason is that some components are critical because they perform critical functions. For instance, no matter how much you sandbox OpenSSL, you still have to worry about the fact that it&#8217;s handling your sensitive data, and so if compromised it might leak that. Fortunately, this class of critical components is smaller, but it&#8217;s non-zero.</p>
<p>This isn&#8217;t to say that sandboxing isn&#8217;t useful, merely that it&#8217;s insufficient. What we need is multiple layers of protection<sup class="footnote-ref"><a id="fnref5" href="#fn5">[5]</a></sup>, with the first layer being procedural mechanisms to defend against code being compromised and the second layer being fine-grained sandboxing to contain the impact of compromise. As noted earlier, it seems problematic to put the burden of better processes on the developer of the component, especially when there are a large number of dependent projects, many of them very well funded.</p>
<p>Something we have been looking at internally at Mozilla is a way for those projects to tag the dependencies they use and depend on. The way that this would work is that each project would then be tagged with a set of other projects which used it (e.g., &#8220;Firefox uses this crate&#8221;). Then when you are considering using a component you could look to see who else uses it, which gives you some measure of confidence. Of course, you don&#8217;t know what sort of auditing those organizations do, but if you know that Project X is very security conscious and they use component Y, that should give you some level of confidence. This is really just a automating something that already happens informally: people judge components by who else uses them. There are some obvious extensions here, for instance labelling specific versions, having indications of what kind of auditing the depending project did, or allowing people to configure their build systems to automatically trust projects vouched for by some set of other projects and refuse to include unvouched projects, maintaining a database of insecure versions (this is something the Brewer et al. proposal suggests too). The advantage of this kind of approach is that it puts the burden on the people benefitting from a project, rather than having some widely used project suddenly subject to a whole pile of new requirements which they may not be interested in meeting. This work is still in the exploratory stages, so <a href="mailto:ekr-blog@mozilla.com">reach out to me</a> if you&#8217;re interested.</p>
<p>Obviously, this only works if people actually do <em>some</em> kind of due diligence prior to depending on a component. Here at Mozilla, we do that to some extent, though it&#8217;s not really practical to review every line of code in a giant package like <a href="https://webrtc.googlesource.com/src/">WebRTC</a> There is some hope here as well: because modern languages such as Rust or Go are memory safe, it&#8217;s much easier to convince yourself that certain behaviors are impossible &#8212; even if the program has a defect &#8212; which makes it easier to audit.<sup class="footnote-ref"><a id="fnref6" href="#fn6">[6]</a></sup> Here too it&#8217;s possible to have clear manifests that describe what capabilities the program needs and verify (after some work) that those are accurate.</p>
<h1 id="summary">Summary </h1>
<p>As I said at the beginning, Brewer et al. are definitely right to be worried about this kind of attack. It&#8217;s very convenient to be able to build on other people&#8217;s work, but the difficulty of ascertaining the quality of that work is an enormous problem<sup class="footnote-ref"><a id="fnref7" href="#fn7">[7]</a></sup>. Fortunately, we&#8217;re seeing a whole series of technological advancements that point the way to a solution without having to go back to the bad old days of writing everything yourself.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item">Supply chain attacks can be mounted via a number of other mechanisms, but in this post, we are going to focus on this threat vector. <a class="footnote-backref" href="#fnref1">&#x21a9;︎</a></li>
<li id="fn2" class="footnote-item">Where &#8220;critical&#8221; is defined by a somewhat complicated <a href="https://github.com/ossf/criticality_score">formula</a> based roughly on the age of the project, how actively maintained it seems to be, how many other projects seem to use it, etc. It&#8217;s actually not clear to me that this is metric is that good a predictor of criticality; it seems mostly to have the advantage that it&#8217;s possible to evaluate purely by looking at the code repository, but presumably one could develop a metric that would be good. <a class="footnote-backref" href="#fnref2">&#x21a9;︎</a></li>
<li id="fn3" class="footnote-item">Experience with TLS Extended Validation certificates, which attempt to verify company identity, <a href="https://www.cyberscoop.com/easy-fake-extended-validation-certificates-research-shows/">suggests</a> that this level of identity is straightforward to fake. <a class="footnote-backref" href="#fnref3">&#x21a9;︎</a></li>
<li id="fn4" class="footnote-item"><a href="https://commerce.net/people/allan-m-schiffman/">Allan Schiffman</a> used to call this phenomenen a &#8220;distributed single point of failure&#8221;. <a class="footnote-backref" href="#fnref4">&#x21a9;︎</a></li>
<li id="fn5" class="footnote-item">The technical term here is <a href="https://en.wikipedia.org/wiki/Defence_in_depth">defense in depth</a>. <a class="footnote-backref" href="#fnref5">&#x21a9;︎</a></li>
<li id="fn6" class="footnote-item">Even better are verifiable systems such the <a href="https://hacl-star.github.io/">HaCl*</a> cryptographic library that Firefox depends on. HaCl* comes with a machine-checkable proof of correctness, which significantly reducing the need to audit all the code. Right now it&#8217;s only practical to do this kind of verification for relatively small programs, in large part because describing the specification that you are proving the program conforms to is hard, but the technology is rapidly getting better. <a class="footnote-backref" href="#fnref6">&#x21a9;︎</a></li>
<li id="fn7" class="footnote-item">This is true even for basic quality reasons. Which of the <a href="https://www.npmjs.com/search?q=keywords:orm">two thousand ORMs</a> for node is the best one to use? <a class="footnote-backref" href="#fnref7">&#x21a9;︎</a></li>
</ol>
</section>
<p></main></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/27/notes-on-addressing-supply-chain-vulnerabilities/">Notes on Addressing Supply Chain Vulnerabilities</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Latest Firefox release includes Multiple Picture-in-Picture and Total Cookie Protection</title>
            <link>https://blog.mozilla.org/blog/2021/02/23/latest-firefox-release-includes-multiple-picture-in-picture-and-total-cookie-protection/</link>
            <pubDate>Tue, 23 Feb 2021 14:02:18 +0000</pubDate>
            <dc:creator><![CDATA[Selena Deckelmann]]></dc:creator>				<category><![CDATA[Firefox]]></category>
            <category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12956</guid>
            <description><![CDATA[<p>Beginning last year, the internet began playing a bigger role in our lives than ever before. In the US, we went from only three percent of workers to more than &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/23/latest-firefox-release-includes-multiple-picture-in-picture-and-total-cookie-protection/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/23/latest-firefox-release-includes-multiple-picture-in-picture-and-total-cookie-protection/">Latest Firefox release includes Multiple Picture-in-Picture and Total Cookie Protection</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p>Beginning last year, the internet began playing a bigger role in our lives than ever before.<a href="https://siepr.stanford.edu/research/publications/how-working-home-works-out#anchor-1"> In the US, we went from only three percent of workers to more than forty percent working from home in 2020</a>, all powered by the web. We also relied on it to stay informed, and connect with friends and family when we couldn’t meet in-person.</p>
<p>And despite the many difficulties we all have faced online and offline, we’re proud to keep making Firefox an essential part of what makes the web work.</p>
<p>Today I’m sharing two new features: multiple picture-in-picture (multi-PiP) and our latest privacy protection combo. Multi-PiP allows multiple videos to play at the same time &#8212; all the adorable animal videos or NCAA Tournament anyone? And our latest privacy protection, the dynamic duo of Total Cookie Protection (technically known as State Partitioning or Dynamic First-Party Isolation) and <a href="https://blog.mozilla.org/security/2021/01/26/supercookie-protections/">Supercookie Protections (launched in last month’s release)</a> are here to combat cross-site cookie tracking once and for all.</p>
<h2>Today’s Firefox features:</h2>
<h3></h3>
<h3><i>Multiple Picture-in-Picture to help multi-task</i></h3>
<p>Our Picture-in-Picture feature topped our <a href="https://blog.mozilla.org/blog/2020/12/15/our-year-in-review-how-weve-kept-firefox-working-for-you-in-2020/">Best of Firefox 2020 features list</a> and we heard from people who wanted more than just <a href="https://blog.mozilla.org/firefox/firefox-picture-in-picture-for-videos/">one picture-in-picture</a> view. In today’s release, we added multiple picture-in-picture views, available on Mac, Linux and Windows, and includes keyboard controls for fast forward and rewind. Haven’t been to a zoo in a while? Now, you can visit your favorite animal at the zoo, along with any other animals around the world with multiple views.  Also, we can’t help that it coincides with one of the biggest sports events this year in March.  <img loading="lazy" class="" src="https://a.slack-edge.com/production-standard-emoji-assets/13.0/apple-large/1f3c0@2x.png" alt=":basketball:" width="26" height="26" /> <img loading="lazy" class="" src="https://a.slack-edge.com/production-standard-emoji-assets/13.0/apple-large/1f609@2x.png" alt=":wink:" width="26" height="26" /></p>
<p><iframe src="https://www.youtube.com/embed/lWs1ScJdzE8" width="835" height="505" frameborder="0" allowfullscreen="allowfullscreen"><span style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" data-mce-type="bookmark" class="mce_SELRES_start">﻿</span></iframe></p>
<h3>New privacy protections to stop cookie tracking</h3>
<p>Today, we are announcing Total Cookie Protection for Firefox, a major new milestone in our work to protect your privacy. Total Cookie Protection stops cookies from tracking you around the web by creating a separate cookie jar for every website. Total Cookie Protection joins our suite of privacy protections called <a href="https://blog.mozilla.org/blog/2019/06/04/firefox-now-available-with-enhanced-tracking-protection-by-default/">ETP (Enhanced Tracking Protection)</a>. In combining Total Cookie Protection with last month’s <a href="https://blog.mozilla.org/security/2021/01/26/supercookie-protections/">supercookie protections</a>, Firefox is now armed with very strong, comprehensive protection against cookie tracking. This will be available in ETP Strict Mode in both the desktop and Android version. Here’s how it works:</p>
<div id="attachment_12958" style="width: 2170px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-12958" loading="lazy" class="wp-image-12958 size-full" src="https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4.png" alt="" width="2160" height="1080" srcset="https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4.png 2160w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-300x150.png 300w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-600x300.png 600w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-768x384.png 768w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-1536x768.png 1536w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-2048x1024.png 2048w, https://blog.mozilla.org/wp-content/uploads/2021/02/panels-4-1000x500.png 1000w" sizes="(max-width: 2160px) 100vw, 2160px" /><p id="caption-attachment-12958" class="wp-caption-text">Total Cookie Protection confines all cookies from each website in a separate cookie jar</p></div>
<p>In our ongoing commitment to bring the best innovations in privacy, we are working tirelessly to improve how Firefox protects our users from tracking. In 2019, Firefox introduced <a href="https://blog.mozilla.org/blog/2019/06/04/firefox-now-available-with-enhanced-tracking-protection-by-default/">Enhanced Tracking Protection</a> (ETP) which blocks cookies from known, identified trackers, based on the <a href="https://disconnect.me/trackerprotection">Disconnect list</a>. To bring even more comprehensive protection, Total Cookie Protection confines all cookies from each website in a separate cookie jar so that cookies can no longer be used to track you across the web as you browse from site to site. <a href="https://blog.mozilla.org/security/2021/02/23/total-cookie-protection/">For a technical look at how this works, you can dig into the details in our post on our Security Blog</a>. You can turn on Total Cookie Protection by setting <a href="https://support.mozilla.org/en-US/kb/enhanced-tracking-protection-firefox-desktop">your Firefox privacy controls to Strict mode</a>.</p>
<h2>Join our journey to evolve Firefox</h2>
<p>If it’s been a while since you’ve used Firefox, now is the time to try Firefox again and see today’s features. You can <a href="https://www.mozilla.org/en-US/firefox/new/">download the latest version of Firefox</a> for your desktop and mobile devices and get ready for an exciting year ahead.</p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/23/latest-firefox-release-includes-multiple-picture-in-picture-and-total-cookie-protection/">Latest Firefox release includes Multiple Picture-in-Picture and Total Cookie Protection</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Expanding Mozilla&#8217;s Boards</title>
            <link>https://blog.mozilla.org/blog/2021/02/18/expanding-mozillas-boards/</link>
            <pubDate>Thu, 18 Feb 2021 17:41:48 +0000</pubDate>
            <dc:creator><![CDATA[Mitchell Baker]]></dc:creator>				<category><![CDATA[About Mozilla]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12951</guid>
            <description><![CDATA[<p>I’m delighted to share that the Mozilla Foundation and Corporation Boards are each welcoming a new member. Wambui Kinya is Vice President of Partner Engineering at Andela, a Lagos-based global &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/18/expanding-mozillas-boards/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/expanding-mozillas-boards/">Expanding Mozilla&#8217;s Boards</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p>I’m delighted to share that the <a href="https://www.mozilla.org/en-US/foundation/annualreport/2019/#angela-roxi-letter">Mozilla Foundation and Corporation Boards</a> are each welcoming a new member.  </p>
<p>Wambui Kinya is Vice President of Partner Engineering at <a href="https://andela.com/">Andela</a>, a Lagos-based global talent network that connects companies with vetted, remote engineers from Africa and other emerging markets. Andela’s vision is a world where the most talented people can build a career commensurate with their ability &#8211; not their race, gender, or geography. Wambui joins the Mozilla Foundation Board and you can read more from her, <a href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors/">here</a>, on why she is joining. Motivated by the intersection of Africa, technology and social impact, Wambui has led business development and technology delivery, digital technology implementation, and marketing enablement across Africa, the United States, Europe and South America. In 2020 she was selected as one of the &#8220;Top 30 Most Influential Women&#8221; by CIO East Africa. </p>
<p>Laura Chambers is Chief Executive Officer of <a href="https://willowpump.com/">Willow Innovations</a>, which addresses one of the biggest challenges for mothers, with the world’s first quiet, all-in-one, in-bra, wearable breast pump. She joins the Mozilla Corporation Board. Laura holds a wealth of knowledge in internet product, marketplace, payment, and community engagement from her time at AirBnB, eBay, PayPal, and Skype, as well as her current role at Willow. Her experience also includes business operations, marketing, shipping, global customer trust and community engagement. Laura brings a clear understanding of the challenges we face in <a href="https://www.independent.co.uk/independentpremium/voices/coronavirus-internet-online-hate-learning-surveillance-a9616451.html">building a better internet</a>, coupled with strong business acumen, and an acute ability to hone in on key issues and potential solutions.  You can read more from Laura about why she is joining <a href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors-2/">here</a>.</p>
<p>At Mozilla, we invite our Board members to be more involved with management, employees and volunteers than is generally the case, as I’ve <a href="https://blog.mozilla.org/blog/2016/06/14/expanding-mozilla-boards/">written</a> about in the past. To ready them for this, Wambui and Laura met with existing Board members, members of the management team, individual contributors and volunteers. </p>
<p>We know that the challenges of the modern internet are so big, and that expanding our capacity will help us develop solutions to those challenges. I am sure that Laura and Wambui’s insights and strategic thinking will be a great addition to our boards.</p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/expanding-mozillas-boards/">Expanding Mozilla&#8217;s Boards</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Why I&#8217;m Joining Mozilla&#8217;s Board of Directors</title>
            <link>https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors-2/</link>
            <pubDate>Thu, 18 Feb 2021 17:37:24 +0000</pubDate>
            <dc:creator><![CDATA[Laura Chambers]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12947</guid>
            <description><![CDATA[<p>Like many of us I suspect, I have long been a fairly passive “end-user” of the internet. In my daily life, I’ve merrily skipped along it to simplify and accelerate &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors-2/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors-2/">Why I&#8217;m Joining Mozilla&#8217;s Board of Directors</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<div id="attachment_12949" style="width: 310px" class="wp-caption alignleft"><a href="https://blog.mozilla.org/wp-content/uploads/2021/02/Laura-Chambers_Mozilla-Board.jpg"><img aria-describedby="caption-attachment-12949" loading="lazy" class="wp-image-12949 size-full" src="https://blog.mozilla.org/wp-content/uploads/2021/02/Laura-Chambers_Mozilla-Board.jpg" alt="" width="300" height="364" /></a><p id="caption-attachment-12949" class="wp-caption-text">Laura Chambers</p></div>
<p>Like many of us I suspect, I have long been a fairly passive “end-user” of the internet. In my daily life, I’ve merrily skipped along it to simplify and accelerate my life, to be entertained, to connect with far-flung friends and family, and to navigate my daily life. In my career in Silicon Valley, I’ve happily used it as a trusty building block to help build many consumer technologies and brands – in roles leading turnarounds and transformations at market-creating companies like eBay, PayPal, Skype, Airbnb, and most recently as CEO of Willow Innovations Inc.</p>
<p>But over the past few years, my relationship with the internet has significantly changed. We’ve all had to face up to the cracks and flaws … many of which have been there for a while, but have recently opened into gaping chasms that we can’t ignore. The impact of curated platforms and data misuse on families, friendships, communities, politics and the global landscape has been staggering. And it’s hit close to home … I have three young children, all of whom are getting online much faster and earlier than expected, due to the craziness of homeschooling, and my concerns about their safety and privacy are tremendous. All of a sudden, my happy glances at the internet have been replaced with side-eyes of mistrust.</p>
<p>So last year, in between juggling new jobs, home-offices full of snoring dogs, and home schooling, I started to think about what I could do to help. In that journey, I was incredibly fortunate to connect with the team at Mozilla. As I learned more about the team, met the talented people at the helm, and dove into their incredible mission to ensure the internet is free, open and accessible to all, I couldn’t think of a better way to do something practical and meaningful to help than through joining the Board.</p>
<p>The opportunity ahead is astounding … using the power of the open internet to make the world a better, freer, more positively connected place. Mozilla has an extraordinary legacy of leading that charge, and I couldn’t be more thrilled to be join the exceptional group driving toward a much better future. I look forward to us all once again being able to merrily skip along our daily lives, with the internet as our trusty guide and friend along the way.</p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors-2/">Why I&#8217;m Joining Mozilla&#8217;s Board of Directors</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Why I’m Joining Mozilla&#8217;s Board of Directors</title>
            <link>https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors/</link>
            <pubDate>Thu, 18 Feb 2021 14:46:14 +0000</pubDate>
            <dc:creator><![CDATA[Wambui Kinya]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12941</guid>
            <description><![CDATA[<p> My introduction to Mozilla was when Firefox was first launched. I was starting my career as a software developer in Boston, MA at the time. My experience was Firefox was &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors/">Why I’m Joining Mozilla&#8217;s Board of Directors</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<div id="attachment_12942" style="width: 310px" class="wp-caption alignleft"><img aria-describedby="caption-attachment-12942" loading="lazy" class="size-medium wp-image-12942" src="https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-300x425.jpg" alt="" width="300" height="425" srcset="https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-300x425.jpg 300w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-600x850.jpg 600w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-768x1088.jpg 768w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-1084x1536.jpg 1084w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-1446x2048.jpg 1446w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-1000x1417.jpg 1000w, https://blog.mozilla.org/wp-content/uploads/2021/02/2016WambuiKinya06-scaled.jpg 1807w" sizes="(max-width: 300px) 100vw, 300px" /><p id="caption-attachment-12942" class="wp-caption-text">Wambui Kinya</p></div>
<p><strong> </strong>My introduction to Mozilla was when Firefox was first launched. I was starting my career as a software developer in Boston, MA at the time. My experience was Firefox was a far superior browser. I was also deeply fascinated by the notion that, as an open community, we could build and evolve a product for greater good.</p>
<div class="block-paragraph">
<div class="rich-text">
<p>You have probably deduced from this, that I am also old enough that growing up in my native country, Kenya, most of my formative years were under the policies of “poverty reduction programs&#8221; dictated and enforced by countries and institutions in the northern hemisphere. My firsthand experience of many of these programs was observing my mother, a phenomenal environmental engineer and academic, work tirelessly to try to convince donor organizations to be more inclusive of the communities they sought to serve and benefit.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>This drive to have greater inclusion and representation was deepened over ten years of being a woman and person of color in technology in corporate America. I will spare you the heartache of recounting my experiences of being the first or the only one. But I must also acknowledge, I was fortunate enough to have leaders who wanted to help me succeed and grow. As my professional exposure became more global, I felt an urgency to have more representation and greater voice from Africa.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>When I moved back to Kenya, ten years ago, I was excited about the advances in access to technology. However, I was disheartened that it was primarily as consumers rather than creators of technology products. We were increasingly distanced from the concentration of power influencing our access, our data and our ability to build and compete in this internet age.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>My professional journey has since been informed by the culmination of believing in the talent that is in Africa, the desire to build for Africa and by extension the digital sovereignty of citizens of the global south. I was greatly influenced by the audacity of organizations like ThoughtWorks that thought deeply about the fight against digital colonialism and invested in free and open source products and communities. This is the context in which I was professionally reintroduced to Mozilla and its manifesto.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Mozilla’s commitment and reputation to “ensure the internet remains a public resource that is open and accessible to us all” has consistently inspired me. However, there is an increased urgency to HOW this is done given the times we live in. We must not only build, convene and enable technology and communities on issues like disinformation, privacy, trustworthy AI and digital rights, but it is imperative that we consider:</p>
<ul>
<li>how to rally citizens and ensure greater representation;</li>
<li>how we connect leaders and enable greater agency to produce; and finally,</li>
<li>how we shape an agenda that is more inclusive.</li>
</ul>
<p>This is why I have joined the Mozilla board. I am truly honored and look forward to contributing but also learning alongside you.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Onwards ever, backwards never!</p>
</div>
</div>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/18/why-im-joining-mozillas-board-of-directors/">Why I’m Joining Mozilla&#8217;s Board of Directors</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Next steps on trustworthy AI: transparency, bias and better data governance</title>
            <link>https://blog.mozilla.org/blog/2021/02/10/next-steps-on-trustworthy-ai-transparency-bias-and-better-data-governance/</link>
            <pubDate>Wed, 10 Feb 2021 16:09:09 +0000</pubDate>
            <dc:creator><![CDATA[Mark Surman]]></dc:creator>				<category><![CDATA[trustworthy AI]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12938</guid>
            <description><![CDATA[<p>Over the last few years, Mozilla has turned its attention to AI, asking: how can we make the data driven technologies we all use everyday more trustworthy? How can we &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/10/next-steps-on-trustworthy-ai-transparency-bias-and-better-data-governance/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/10/next-steps-on-trustworthy-ai-transparency-bias-and-better-data-governance/">Next steps on trustworthy AI: transparency, bias and better data governance</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<div class="block-paragraph">
<div class="rich-text">
<p>Over the last few years, <a href="https://blog.mozilla.org/blog/2020/12/15/mozillas-vision-for-trustworthy-ai/">Mozilla has turned its attention to AI</a>, asking: <b>how can we make the data driven technologies we all use everyday more trustworthy?</b> How can we make things like social networks, home assistants and search engines both more helpful and less harmful in the era ahead?</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>In 2021, we will take a next step with this work by <b>digging deeper in three areas</b> where we think we can make real progress: <b>transparency, bias and better data governance</b>. While these may feel like big, abstract concepts at first glance, all three are at the heart of problems we hear about everyday in the news: problems that are top of mind not just in tech circles, but also amongst policy makers, business leaders and the public at large.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Think about this: <b>we know that social networks are driving misinformation and political divisions around the world</b>. And there is growing consensus that we urgently need to do something to fix this. Yet we can’t easily see inside — we can’t scrutinize — the AI that drives these platforms, making genuine fixes and real accountability impossible. Researchers, policy makers and developers need to be able to see how these systems work (transparency) if we’re going to tackle this issue.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Or, this: <b>we know that AI driven technology can discriminate, exclude or otherwise harm some people more than others</b>. And, as automated systems become commonplace in everything from online advertising to financial services to policing, the impact of these systems becomes ever more real. We need to look at how systemic racism and the lack of diversity in the tech industry sits at the root of these problems (bias). Concretely, we also need to build tools to detect and mitigate bias — and to build for inclusivity — within the technologies that we use everyday.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>And, finally, this: <b>we know the constant collection of data about what we do online makes (most of) us deeply uncomfortable</b>. And we know that current data collection practices are at the heart of many of the problems we face with tech today, including misinformation and discrimination. Yet there are few examples of technology that works differently. We need to develop new methods that use AI and data in a way that respects us as people, and that gives us power over the data collected about us (better data governance) — and then using these new methods to create alternatives to the online products and services we all use today.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Late last year, we zeroed in on transparency, bias and data governance for the reasons suggested above — each of these areas are central to the biggest ‘technology meets society’ issues that we face today. There is growing consensus that we need to tackle these issues. Importantly, we believe that this <b>widespread awareness creates a unique opportunity for us to act: to build products, write laws and develop norms that result in a very different digital world</b>. Over the next few years, we have a chance to make real progress towards more trustworthy AI — and a better internet — overall.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>This opportunity for action &#8212; the chance to make the internet different and better &#8212; has shaped how we think about the next steps in our work. Practically, the teams within Mozilla Foundation are <b>organizing our</b> <a href="https://wiki.mozilla.org/Foundation/2021/OKRs"><b>2021 work</b></a><b> around objectives tied to these themes</b>:</p>
<ol>
<li>Test <b>AI transparency</b> best practices to increase adoption by builders and policymakers.</li>
<li>Accelerate the impact of people working to mitigate <b>bias in AI</b>.</li>
<li>Accelerate equitable <b>data governance</b> alternatives as a way to advance trustworthy AI.</li>
</ol>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>These teams are also focusing on collaborating with others across the internet health movement — and with people in other social movements — to make progress on these issues. We’ve set a specific 2021 objective to ‘<b>partner with diverse movements at the intersection of their primary issues and trustworthy AI</b>’.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>We already have momentum — and work underway — on all of these topics, although more with some than others. We spent much of last year developing initiatives related to better data governance, including the <a href="https://foundation.mozilla.org/en/blog/mozillas-new-data-futures-lab-launches-with-research-on-data-governance-alternatives/">Data Futures Lab</a>, which announced its <a href="https://foundation.mozilla.org/en/blog/announcing-3-new-awards-to-fuel-better-data-stewardship/">first round of grantee partners</a> in December. And, also in 2020, we worked with citizens on projects like <a href="https://foundation.mozilla.org/en/campaigns/regrets-reporter/">YouTube Regrets Reporter</a> to show what social media transparency could look like in action. While our work is more nascent on the issue of bias, we are supporting the work of people like Mozilla Fellows <a href="https://www.linkedin.com/in/deborah-raji-065751b2/">Deborah Raji</a> and <a href="https://www.linkedin.com/in/camillefrancois/">Camille Francios</a> who are exploring concrete ways to tackle this challenge. We hope to learn from them as we shape our own thinking here.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>Our high level plans for this work are outlined in our <a href="https://wiki.mozilla.org/Foundation/2021/OKRs">2021 Objectives and Key Results</a>, which you can find on the <a href="https://wiki.mozilla.org/Foundation/2021/OKRs">Mozilla wiki</a>. We’ll post more detail on our plans — and calls for partnership — in the coming weeks, including overviews of our work and thinking on transparency, bias and better data governance. We’ll also post about efforts to expand partnerships we have with organizations in other movements.</p>
</div>
</div>
<div class="block-paragraph">
<div class="rich-text">
<p>As we look ahead, it’s important to remember: AI and data are defining computing technologies of today, just like the web was the defining technology 20 years ago when Mozilla was founded. As with the web, the norms we set around both AI and data have the potential to delight us and unlock good, or to discriminate and divide. It’s still early days. <b>We still have the chance to define where AI will take us, and to bend it towards helping rather than harming humanity</b>. That’s an important place for all of us to be focusing our attention right now.</p>
<p>P.S. for more background on Mozilla&#8217;s thinking about trustworthy AI, <a class="c-link" href="https://blog.mozilla.org/blog/2020/12/15/mozillas-vision-for-trustworthy-ai/" target="_blank" rel="noopener noreferrer" data-stringify-link="https://blog.mozilla.org/blog/2020/12/15/mozillas-vision-for-trustworthy-ai/" data-sk="tooltip_parent">take a look at this blog post and associated discussion paper</a>.</p>
</div>
</div>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/10/next-steps-on-trustworthy-ai-transparency-bias-and-better-data-governance/">Next steps on trustworthy AI: transparency, bias and better data governance</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Mozilla Welcomes the Rust Foundation</title>
            <link>https://blog.mozilla.org/blog/2021/02/08/mozilla-welcomes-the-rust-foundation/</link>
            <pubDate>Mon, 08 Feb 2021 17:07:46 +0000</pubDate>
            <dc:creator><![CDATA[Daniel Nazer]]></dc:creator>				<category><![CDATA[General]]></category>
            <category><![CDATA[Rust]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12920</guid>
            <description><![CDATA[<p>Today Mozilla is thrilled to join the Rust community in announcing the formation of the Rust Foundation. The Rust Foundation will be the home of the popular Rust programming language &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/08/mozilla-welcomes-the-rust-foundation/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/08/mozilla-welcomes-the-rust-foundation/">Mozilla Welcomes the Rust Foundation</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p>Today Mozilla is thrilled to join the Rust community in announcing <a href="https://foundation.rust-lang.org/posts/2021-02-08-hello-world/">the formation of the Rust Foundation</a>. The Rust Foundation will be the home of the popular Rust programming language that began within Mozilla. Rust has long been bigger than just a Mozilla project and today’s announcement is the culmination of many years of community building and collaboration. Mozilla is pleased to be a founding Platinum Sponsor of the Rust Foundation and looks forward to working with it to help Rust continue to grow and prosper.</p>
<p><a href="https://www.rust-lang.org/">Rust</a> is an open-source programming language focused on safety, speed and concurrency. It started life as a side project in Mozilla Research. Back in 2010, Graydon Hoare <a href="http://venge.net/graydon/talks/intro-talk-2.pdf">presented work</a> on something he hoped would become a “slightly less annoying” programming language that could deliver better memory safety and more concurrency. Within a few years, Rust had grown into a project with an independent governance structure and contributions from inside and outside Mozilla. In 2015, the Rust project <a href="https://blog.rust-lang.org/2015/05/15/Rust-1.0.html">announced</a> the first stable release, Rust 1.0.</p>
<p>Success quickly followed. Rust is so popular that it has been <a href="https://www.infoworld.com/article/3546337/rust-language-tops-stack-overflow-survey.html">voted</a> the most “most-loved” programming language in Stack Overflow’s developer survey for five years in a row. Adoption is increasing as companies <a href="https://aws.amazon.com/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/">big</a> and <a href="https://www.parity.io/why-rust/">small</a>, <a href="https://www.nature.com/articles/d41586-020-03382-2">scientists</a>, and many others discover its power and usability. Mozilla used Rust to build <a href="https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/">Stylo</a>, the CSS engine in Firefox (<a href="https://blog.rust-lang.org/2017/11/14/Fearless-Concurrency-In-Firefox-Quantum.html">replacing</a> approximately 160,000 lines of C++ with 85,000 lines of Rust).</p>
<p>It takes a lot for a <a href="https://xkcd.com/2309/">new programming language</a> to be successful. Rust’s growth is thanks to literally <a href="https://github.com/rust-lang/rust/graphs/contributors">thousands of contributors</a> and a strong culture of inclusion. The wide range of contributors and adopters has made Rust a better language for everyone.</p>
<p>Mozilla is proud of its role in Rust’s creation and we are happy to see it outgrow its origins and secure a dedicated organization to support its continued evolution. Given its reach and impact, Rust will benefit from an organization that is 100% focused on the project.</p>
<p>The new Rust Foundation will have board representation from a wide set of stakeholders to help set a path to its own future. Other entities will be able to provide direct financial resources to Rust beyond in-kind contributions. The Rust Foundation will not replace the existing community and technical governance for Rust. Rather, it will be the organization that hosts Rust infrastructure, supports the community, and stewards the language for the benefit of all users.</p>
<p>Mozilla joins all <a href="https://en.wiktionary.org/wiki/Rustacean">Rustaceans</a> in welcoming the new Rust Foundation.</p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/08/mozilla-welcomes-the-rust-foundation/">Mozilla Welcomes the Rust Foundation</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>What WebRTC means for you</title>
            <link>https://blog.mozilla.org/blog/2021/02/04/what-webrtc-means-for-you/</link>
            <pubDate>Thu, 04 Feb 2021 21:51:03 +0000</pubDate>
            <dc:creator><![CDATA[Eric Rescorla]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12927</guid>
            <description><![CDATA[<p>If I told you that two weeks ago IETF and W3C finally published the standards for WebRTC, your response would probably be to ask what all those acronyms were. Read &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/02/04/what-webrtc-means-for-you/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/04/what-webrtc-means-for-you/">What WebRTC means for you</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<div class="wrapper">
<div>
<p><img loading="lazy" class="alignleft size-thumbnail wp-image-12607" src="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg" alt="" width="150" height="150" srcset="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg 150w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-300x300.jpg 300w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res.jpg 500w" sizes="(max-width: 150px) 100vw, 150px" />If I told you that two weeks ago IETF and W3C finally published the standards for WebRTC, your response would probably be to ask what all those acronyms were. Read on to find out!</p>
<p>Widely available high quality videoconferencing is one of the real successes of the Internet. The idea of videoconferencing is of course old (go watch that <a href="https://www.youtube.com/watch?v=ZXokqxBQsFM">scene</a> in 2001 where Heywood Floyd makes a video call to his family on a Bell videophone), but until fairly recently it required specialized equipment or at least downloading specialized software. Simply put, WebRTC is videoconferencing (VC) in a Web browser, with no download: you just go to a Web site and make a call. Most of the major VC services have a WebRTC version: this includes Google Meet, Cisco WebEx, and Microsoft Teams, plus a whole bunch of smaller players.</p>
<h1 id="a-toolkit%2C-not-a-phone">A toolkit, not a phone</h1>
<p>WebRTC isn&#8217;t a complete videoconferencing system; it&#8217;s a set of tools built in to the browser that take care of many of the hard pieces of building a VC system so that you don&#8217;t have to. This includes:</p>
<ul>
<li>Capturing the audio and video from the computer&#8217;s microphone and camera. This also includes what&#8217;s called <em>Acoustic Echo Cancellation</em>: removing echos (hopefully) even when people don&#8217;t wear headphones.</li>
<li>Allowing the two endpoints to negotiate their capabilities (e.g., &#8220;I want to send and receive video at 1080p using the AV1 codec&#8221;) and arrive at a common set of parameters.</li>
<li>Establishing a secure connection between you and other people on the call. This includes getting your data through any NATs or firewalls that may be on your network.</li>
<li>Compressing the audio and video for transmission to the other side and then reassembling it on receipt. It&#8217;s also necessary to deal with situations where some of the data is lost, in which case you want to avoid having the picture freeze or hearing audio glitches.</li>
</ul>
<p>This functionality is embedded in what&#8217;s called an <em>application programming interface</em> (API): a set of commands that the programmer can give the browser to get it to set up a video call. The upshot of this is that it&#8217;s possible to write a very basic VC system in a <a href="https://webrtc.github.io/samples/src/content/peerconnection/pc1/">very small number of lines of code</a>. Building a production system is more work, but with WebRTC, the browser does much of the work of building the client side for you.</p>
<h1 id="standardization">Standardization</h1>
<p>Importantly, this functionality is all standardized: the API itself was published and by the <em>World Wide Web Consortium</em>(W3C) and the network protocols (encryption, compression, NAT traversal, etc.) were standardized by the <em>Internet Engineering Task Force</em> (IETF). The result is a giant pile of specifications, including the <a href="https://www.w3.org/TR/webrtc/">API specification</a>, the <a href="https://tools.ietf.org/html/rfc8829">protocol</a> for negotiating what media will be sent or received, and a <a href="https://tools.ietf.org/html/rfc8831">mechanism</a> for sending peer-to-peer data. All in all, this represents a huge amount of work by too many people to count spanning a decade and resulting in hundreds of pages of specifications.</p>
<p>The result is that it&#8217;s possible to build a VC system that will work for everyone right in their browser and without them having to install any software</p>
<p>Ironically, the actual publication of the standards is kind of anticlimactic: every major browser has been shipping WebRTC for years and as I mentioned above, there are a large number of WebRTC VC systems. This is a good thing: widespread deployment is the only way to get confidence that technologies really work as expected and that the documents are clear enough to implement from. What the standards reflect is the collective judgement of the technical community that we have a system which generally works and that we&#8217;re not going to change the basic pieces. It also means that it&#8217;s time for VC providers who implemented non-standard mechanisms to update to what the standards say<sup class="footnote-ref"><a id="fnref1" href="#fn1">[1]</a></sup>.</p>
<h1 id="why-do-you-care-about-any-of-this%3F">Why do you care about any of this?</h1>
<p>At this point you might be thinking &#8220;OK, you all did a lot of work, but why does it matter? Can&#8217;t I just download Zoom? There are a number of important reasons why WebRTC is a big deal, as described below.</p>
<h3 id="security">Security</h3>
<p>Probably the most important reason is <em>security</em>. Because WebRTC runs entirely in the browser, it means that you don&#8217;t need to worry about security issues in the software that the VC provider wants you to download. As an example, last year Zoom had a number of high profile security flaws that would, for instance, have allowed web sites to <a href="https://medium.com/bugbountywriteup/zoom-zero-day-4-million-webcams-maybe-an-rce-just-get-them-to-visit-your-website-ac75c83f4ef5">add you to calls without your permission</a>, or mount what&#8217;s called a <em>Remote Code Execution</em> attack that would allow attackers to <a href="https://blog.assetnote.io/bug-bounty/2019/07/17/rce-on-zoom/">run their code on your computer</a>. By contrast, because WebRTC doesn&#8217;t require a download, you&#8217;re not exposed to whatever vulnerabilities the vendor may have in their client. Of course browsers don&#8217;t have a perfect security record, but every major browser invests a huge amount in security technologies like <a href="https://wiki.mozilla.org/Security/Sandbox">sandboxing</a>. Moreover, you&#8217;re already running a browser, so every additional application you run increases your security risk. For this reason, Kaspersky <a href="https://www.kaspersky.com/blog/zoom-security-ten-tips/34729/">recommends</a> running the Zoom Web client, even though the experience is a lot worse than the app.<sup class="footnote-ref"><a id="fnref2" href="#fn2">[2]</a></sup></p>
<p>The second security advantage of WebRTC-based conferencing is that the browser controls access to the camera and microphone. This means that you can easily prevent sites from using them, as well as be sure when they are in use. For instance, Firefox prompts you before letting a site use the camera and microphone and then shows something in the URL bar whenever they are live.</p>
<p>WebRTC is always encrypted in transit without the VC system having to do anything else, so you mostly don&#8217;t have to ask whether the vendor has done a good job with their encryption. This is one of the pieces of WebRTC that Mozilla was most involved in putting into place, in line with <a href="https://www.mozilla.org/en-US/about/manifesto/">Mozilla Manifesto</a> principle number 4 (Individuals’ security and privacy on the internet are fundamental and must not be treated as optional.). Even more exciting, we&#8217;re starting to see work on built-in end-to-end encrypted conferencing for WebRTC built on <a href="https://datatracker.ietf.org/wg/mls/about/">MLS</a> and <a href="https://datatracker.ietf.org/wg/sframe/about/">SFrame</a>. This will help address the one major security feature that some native clients have that WebRTC does not provide: preventing the service from listening in on your calls. It&#8217;s good to see progress on that front.</p>
<h3 id="low-friction">Low Friction</h3>
<p>Because WebRTC-based video calling apps work out of the box with a standard Web browser, they dramatically reduce friction. For users, this means they can just join a call without having to install anything, which makes life a lot easier. I&#8217;ve been on plenty of calls where someone couldn&#8217;t join &#8212; often because their company used a different VC system &#8212; because they hadn&#8217;t downloaded the right software, and this happens a lot less now that it just works with your browser. This can be an even bigger issue in enterprises have restrictions on what software can be installed.</p>
<p>For people who want to stand up a new VC service, WebRTC means that they don&#8217;t need to write a new piece of client software and get people to download it. This makes it much easier to enter the market without having to worry about users being locked into one VC system and unable to use yours.</p>
<p>None of this means that you can&#8217;t build your own client and a number of popular systems such as WebEx and Meet have downloadable endpoints (or, in the case of WebEx, hardware devices you can buy). But it means you don&#8217;t have to, and if you do things right, browser users will be able to talk to your custom endpoints, thus giving casual users an easy way to try out your service without being too committed.<sup class="footnote-ref"><a id="fnref3" href="#fn3">[3]</a></sup></p>
<h3 id="enhancing-the-web">Enhancing The Web</h3>
<p>Because WebRTC is part of the Web, not isolated into a separate app, that means that it can be used not just for conferencing applications but to enhance the Web itself. You want to add an audio stream to your game? Share your screen in a webinar? Upload video from your camera? No problem, just use WebRTC.</p>
<p>One exciting thing about WebRTC is that there turn out to be a lot of Web applications that can use WebRTC besides just video calling. Probably the most interesting is the use of WebRTC &#8220;Data Channels&#8221;, which allow a pair of clients to set up a connection between them which they can use to directly exchange data. This has a number of interesting applications, including <a href="https://www.realtimecommunicationsworld.com/webrtc-and-gaming/">gaming</a>, <a href="https://www.sharedrop.io/">file transfer</a>, and even <a href="https://webtorrent.io/desktop/">BitTorrent in the browser</a>. It&#8217;s still early days, but I think we&#8217;re going to be seeing a lot of DataChannels in the future.</p>
<h1 id="the-bigger-picture">The bigger picture</h1>
<p>By itself, WebRTC is a big step forward for the Web: it If you&#8217;d told people 20 years ago that they would be doing video calling from their browser, they would have laughed at you &#8212; and I have to admit, I was initially skeptical &#8212; and yet I do that almost every day at work. But more importantly, it&#8217;s a great example of the power the Web has to make to make people&#8217;s lives better and of what we can do when we work together to do that.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item">Technical note: probably the biggest source of problems for Firefox users is people who implemented a Chrome-specific mechanism for handling multiple media streams called &#8220;Plan B&#8221;. The IETF eventually went with something called &#8220;Unified Plan&#8221; and Chrome supports it (as does Google Meet) but there are still a number of services, such as Slack and Facebook Video Calling, which do Plan B only which means they don&#8217;t work properly with Firefox, which implemented Unified Plan. <a class="footnote-backref" href="#fnref1">&#x21a9;︎</a></li>
<li id="fn2" class="footnote-item">The Zoom Web client is an interesting case in that it&#8217;s only partly WebRTC. Unlike (say) Google Meet, Zoom Web uses WebRTC to capture audio and video and to transmit media over the network, but does all the audio and video locally using <a href="https://webassembly.org/">WebAssembly</a>. It&#8217;s a testament to the power of WebAssembly that this works at all, but a head-to-head comparison of Zoom Web to other clients such as Meet or Jitsi reveals the advantages of using the WebRTC APIs built into the browser. <a class="footnote-backref" href="#fnref2">&#x21a9;︎</a></li>
<li id="fn3" class="footnote-item">Google has open sourced their <a href="https://webrtc.googlesource.com/src/">WebRTC stack</a>, which makes it easier to write your own downloadable client, including one which will interoperate with browsers. <a class="footnote-backref" href="#fnref3">&#x21a9;︎</a></li>
</ol>
</section>
</div>
</div>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/02/04/what-webrtc-means-for-you/">What WebRTC means for you</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title>Why getting voting right is hard, Part V: DREs (spoiler: they&#8217;re bad)</title>
            <link>https://blog.mozilla.org/blog/2021/01/26/why-getting-voting-right-is-hard-part-v-dres-spoiler-theyre-bad/</link>
            <pubDate>Tue, 26 Jan 2021 15:41:45 +0000</pubDate>
            <dc:creator><![CDATA[Eric Rescorla]]></dc:creator>				<category><![CDATA[General]]></category>

            <guid isPermaLink="false">https://blog.mozilla.org/?p=12917</guid>
            <description><![CDATA[<p>This is the fifth post in my series on voting systems (catch up on parts I, II, III and IV), focusing on computerized voting machines. The technical term for these &#8230; <a class="go" href="https://blog.mozilla.org/blog/2021/01/26/why-getting-voting-right-is-hard-part-v-dres-spoiler-theyre-bad/">Read more</a></p>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/01/26/why-getting-voting-right-is-hard-part-v-dres-spoiler-theyre-bad/">Why getting voting right is hard, Part V: DREs (spoiler: they&#8217;re bad)</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></description>
            <content:encoded><![CDATA[<p><main class="tmpl-post"><img loading="lazy" class="alignleft size-thumbnail wp-image-12607" src="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg" alt="" width="150" height="150" srcset="https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-150x150.jpg 150w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res-300x300.jpg 300w, https://blog.mozilla.org/wp-content/uploads/2020/04/eric-rescorla-high-res.jpg 500w" sizes="(max-width: 150px) 100vw, 150px" />This is the fifth post in my series on voting systems (catch up on parts <a href="https://blog.mozilla.org/blog/2020/12/08/why-getting-voting-right-is-hard-part-i-introduction-and-requirements/">I</a>, <a href="https://blog.mozilla.org/blog/2020/12/14/why-getting-voting-right-is-hard-part-ii-hand-counted-paper-ballots/">II</a>, <a href="https://blog.mozilla.org/blog/2021/01/05/why-getting-voting-right-is-hard-part-iii-optical-scan/">III</a> and <a href="https://blog.mozilla.org/blog/2021/01/13/why-getting-voting-right-is-hard-part-iv-absentee-voting-and-vote-by-mail/">IV</a>), focusing on computerized voting machines. The technical term for these is <em>Direct Recording Electronic</em> (DRE) voting systems, but in practice what this means is that you vote on some kind of computer, typically using a touch screen interface. As with precinct-count optical scan, the machine produces a total count, typically recorded on a memory card, printed out on a paper receipt-like tape, or both. These can be sent back to election headquarters, together with the ballots, where they are aggregated.</main></p>
<h1 id="accessibility">Accessibility</h1>
<p>One of the major selling points of DREs is accessibility: paper ballots are difficult for people with a number of disabilities to access without assistance. At least in principle DREs can be made more accessible, for instance fitted with audio interfaces, sip-puff devices, etc. Another advantage of DREs is that they scale better to multiple languages: you of course still have to encode ballot definitions in each new language, but you don&#8217;t need to worry about whether you&#8217;ve printed enough ballot in any given language<sup class="footnote-ref"><a id="fnref1" href="#fn1">[1]</a></sup></p>
<p>In practice, the accessibility of DREs is <a href="https://www.theguardian.com/us-news/2019/jul/12/2020-election-voting-security-disabled-access-ballots-machines">not that great</a>:</p>
<blockquote><p>Noel Runyan is one of the few people who sits at the crossroads of<br />
this debate. He has 50 years of experience designing accessible<br />
systems and is both a computer scientist and disabled. He was dragged<br />
into this debate, he said, because there were so few other people who<br />
had a stake in both fields.</p>
<p>Voting machines for all is clearly not the right position, Runyan<br />
said. But neither is the universal requirement for hand-marked paper<br />
ballots.</p>
<p>“The [Americans with Disabilities Act], Hava and decency require that<br />
we allow disabled people to vote and have accessible voting systems,”<br />
Runyan said.</p>
<p>Yet Runyan also believes the voting machines on the market today are<br />
“garbage”. They neither provide any real sense of security against<br />
physical or cyber-attacks that could alter an election, nor do they<br />
have good user interfaces for voters regardless of disability status.</p></blockquote>
<p>See also the 2007 California Top-to-Bottom-Review <a href="https://votingsystems.cdn.sos.ca.gov/oversight/ttbr/accessibility-review-report-california-ttb-absolute-final-version16.pdf">accessibility report</a> for a long catalog of the failings of accessible voting systems at the time, which don&#8217;t seem to have improved much. With all that said, having <em>any</em> kind of accessiblity is a pretty big improvement. In particular, this was the first time that many visually impaired voters were able to vote without assistance.</p>
<h1 id="destroyingclarifying-voter-intent"><s>Destroying</s>Clarifying Voter Intent</h1>
<p>As discussed in previous posts, one of the challenges with any kind of hand-marked ballot is dealing with edge cases where the markings are not clear and you have to discern voter intent. Arguments about how to interpret (or discard) these ambiguous ballots have been important in at least two very high stakes US elections, the 2000 Bush/Gore Florida Presidential contest (conducted on punch card machines) and the 2008 Coleman/Franken Minnesota Senate contest (conducted on optical scan machines). It&#8217;s traditional at this point to show the following picture of one of the &#8220;scrutineers&#8221; from the Florida recount trying to interpret a punch card ballot<sup class="footnote-ref"><a id="fnref2" href="#fn2">[2]</a></sup>:</p>
<p><img loading="lazy" class="" src="https://i.guim.co.uk/img/media/87ecf8c99247901a67f7b8c690603ec0dbd05575/0_60_1298_1612/master/1298.jpg?width=700&amp;quality=85&amp;auto=format&amp;fit=max&amp;s=98b8af605d4b60e4410f3e1459af16f1" alt="scrutineer" width="409" height="507" /></p>
<p>In a DRE system, by contrast, all of the interpretation of voter intent is done by the computer, with the expectation that any misinterpretation will be caught by the voter checking the DRE&#8217;s work (typically at some summary screen before casting). In addition, the DRE can warn users about potential errors on their part (or just make them impossible by forbidding voters from voting for &gt;1 candidate, etc.). To the extent to which voters actually check that the DRE is behaving correctly, this seems like an advantage, but if they do not (see below) then it&#8217;s just destroying information which might be used to conduct a more accurate election. We have trouble measuring the error rate of DREs in the field &#8212; again, because the errors are erased and because observing actual voters while casting ballots is a violation of ballot privacy and secrecy &#8212; but Michael Byrne <a href="https://behavioralpolicy.org/wp-content/uploads/2017/08/v3i1-web-Byrne.pdf">reports</a> that under laboratory conditions, DREs have comparable error rates (~1-2%) to hand-marked optical scan ballots, so this suggests that the outcome is about neutral.</p>
<h1 id="scalability">Scalability</h1>
<p>DREs have far worse scaling properties than optical scan systems. The number of voters that can vote at once is one of the main limits on how fast people can get through a polling place. Thus, you&#8217;d like to have as many voting stations as possible. However, DREs are expensive to buy (as well as to set up), so there&#8217;s pressure on the maximum number of machines. To make matters worse, you need more machines than you would expect by just calculating the total amount of time people need to vote.</p>
<p>The intuition here is that people don&#8217;t vote evenly throughout the day, so you need many more machines than you would need to handle the average arrival rate. For instance, if you expect to see 1200 voters over a 12 hour period and each voter takes 6 minutes to vote, you might think you could get by with 10 machines. However, what actually happens is that a lot of people vote before work, at lunch, and after work and so you get a line that builds up early, gradually dissipates throughout the morning, with a lot of machines standing idle, builds up again around lunch, then dissipates, and and then another long line that starts to build up around 5 PM. The math here is complicated, but roughly speaking you need about <a href="https://static.usenix.org/events/evt/tech/full_papers/Edelstein.pdf">twice</a> as many machines as you would expect to ensure that lines stay short. In addition, the problem gets worse when there is high turnout.</p>
<p>These problems exist to some extent with optical scan, but the main difference is that the voting stations &#8212; typically a table and a privacy shield &#8212; are cheap, so you can afford to have overcapacity. Moreover, if you really start getting backed up you can let voters fill out ballots on clipboards or whatever. This isn&#8217;t to say that there&#8217;s no way to get long lines with paper ballots; for instance, you could have problems at checkin or a backup at the precinct count scanner, but in general paper should be more resilient to high turnout than DREs. It&#8217;s also more resilient to failure: if the scanners fail, you can just have people cast ballots in a ballot box for later scanning. If the DREs fail, people can&#8217;t vote unless you have backup paper ballots.</p>
<h1 id="security">Security</h1>
<p>DREs are computers and as discussed in <a href="https://blog.mozilla.org/blog/2020/12/14/why-getting-voting-right-is-hard-part-ii-hand-counted-paper-ballots/">Part III</a>, any kind of computerized voting is dangerous because computers can be compromised. This is especially dangerous in a DRE system because the computer completely controls the users experience: it can let the voter vote for Smith &#8212; and even show the voter that they voted for Smith &#8212; and then record a vote for Jones. In the most basic DRE system, this kind of fraud is essentially undetectable: you simply have to <em>trust</em> the computer. For obvious reasons, this is not good. To quote <a href="https://twitter.com/rlbarnes/">Richard Barnes</a>, &#8220;for security people &#8216;trust&#8217; is a bad word.&#8221;</p>
<h2 id="how-to-compromise-a-voting-machine">How to compromise a voting machine</h2>
<p>There are a number of ways in which a voting machine might get compromised. The simplest is that someone might with physical access might subvert it (for obvious<sup class="footnote-ref"><a id="fnref3" href="#fn3">[3]</a></sup> reasons, you don&#8217;t want voting machines to be networked, let alone connected to the Internet). The bad news is that &#8212; at least in the past &#8212; a number of studies of DREs have found it fairly easy to compromise DREs even with momentary access. For instance, in 2007, Feldman, Halderman, and Felten <a href="https://jhalderm.com/pub/papers/ts-evt07-init.pdf">studied</a> the Diebold AccuVote-TS and found that:</p>
<blockquote><p>1. Malicious software running on a single voting machine can steal votes<br />
with little if any risk of detection. The malicious software can modify<br />
all of the records, audit logs, and counters kept by the voting machine,<br />
so that even careful forensic examination of these records will find<br />
nothing amiss. We have constructed demonstration software that carries<br />
out this vote-stealing attack.</p>
<p>2. Anyone who has physical access to a voting machine, or to a memory<br />
card that will later be inserted into a machine, can install said<br />
malicious software using a simple method that takes as little as<br />
one minute. In practice, poll workers and others often have<br />
unsupervised access to the machines.</p></blockquote>
<p>As I said in Part III, most of the work here was done in the 2000s, so it&#8217;s possible that things have improved, but the <a href="https://www.courthousenews.com/wp-content/uploads/2020/10/ga-voting.pdf">available evidence</a> suggests otherwise. Moreover, there are limits to how good a job it seems possible to do here.</p>
<p>As with precinct-count machines, there are a number of ways in which an attacker might get enough physical access to the machine in order to attack them. Anyone who has access to the warehouse where the machines are stored could potentially tamper with them. In addition it&#8217;s not uncommon for voting machines to be stored overnight at polling places before the election, where you&#8217;re mostly relying on whatever lock the church or school or whatever has on its doors. It&#8217;s also not impossible that a voter could exploit temporary physical access to a machine in order to compromise it &#8212; remember that there usually will be a lot of machines in a given location so it&#8217;s hard to supervise them all &#8212; but that is a somewhat harder attack to mount.</p>
<h2 id="viral-attacks">Viral attacks</h2>
<p>However, there is another more serious attack modality: device administration. Prior to each election, DREs need to be initialized with the ballot contents for each context. The details of how this is done vary, for instance one connect them via a cable to the <em>Election Management System</em> (EMS)<em> [&#8211;corrected from &#8220;Server&#8221;]</em>, or insert a memory stick programmed by the EMS, or sometimes over a local network. In either case, this electronic connection is a potential avenue for attack by an attacker who controls the EMS. This connection can also be an opportunity for a compromised voting machine to attack the EMS. Together, these provide the potential conditions for a virus: an attacker compromises a single DRE and then uses that to attack the EMS, and then uses the EMS to attack every DRE in the jurisdiction. This has been demonstrated on real systems. Here&#8217;s Feldman et al. again:</p>
<blockquote><p>3. AccuVote-TS machines are susceptible to voting-machine viruses—computer<br />
viruses that can spread malicious software automatically and invisibly from<br />
machine to machine during normal pre- and post-election activity. We have<br />
constructed a demonstration virus that spreads in this way, installing our<br />
demonstration vote-stealing program on every machine it infects.</p></blockquote>
<p>It&#8217;s important to remember that this kind of attack is also potentially possible with precinct-count opscan machines: any time you have computers in the polling place you run this risk. The major difference is that with precinct-count opscan machines, you have the paper ballots available so you can recount them without trusting the computer.</p>
<h2 id="voter-verifiable-paper-audit-trails-(vvpat)">Voter Verifiable Paper Audit Trails (VVPAT)</h2>
<p>Because of this kind of concern, some DREs are fitted with what&#8217;s called a <em>Voter Verifiable Paper Audit Trail</em> (VVPAT). A typical VVPAT is a reel-to-reel thermal printer (think credit card receipts) behind a clear cover that is attached to the voting machine, as in the picture of a Hart voting machine below (the VVPAT is the grey box on the left). [Picture by Joseph Lorenzo Hall].</p>
<p><img src="http://www.smartweek.it/wpsw/wp-content/uploads/2016/11/3.jpg" alt="Hart eSlate with VVPAT" /></p>
<p>The typical way this works is that after the voter has made their selections they will be presented with a final confirmation screen. At the same time, the VVPAT will print out a summary of their choices which the voter can check. If they are correct, the voter accepts them. If not, they can go back and correct their choices, and then go back to the confirmation screen. The idea is that the VVPAT then becomes an untamperable &#8212; at least electronically &#8212; record of the voter&#8217;s choices and can be counted separately if there is some concern about the correctness of the machine tally. If everyone did this, then DREs with VVPAT would be software independent (recall our discussion of SI in <a href="https://blog.mozilla.org/blog/2021/01/05/why-getting-voting-right-is-hard-part-iii-optical-scan/">Part III</a> of this series).</p>
<p>The major problem with VVPATs is that voters make mistakes and they aren&#8217;t very good about checking the results. This means that a compromised machine can change the voter&#8217;s vote (as if the voter had made a mistake). If the voter doesn&#8217;t catch the mistake, then the attacker wins, and if they do, they&#8217;re allowed to correct the mistake.<sup class="footnote-ref"><a id="fnref4" href="#fn4">[4]</a></sup> We do have some <a href="https://jhalderm.com/pub/papers/bmd-verifiability-sp20.pdf">data</a> on this from Bernhard et al., who studied <em>Ballot Marking Devices</em> (BMDs), which are like DREs except that they print out optical scan ballots (see below). They found that if left to themselves around 6.5% of voters (in a simulated but realistic setting) will detect ballots being changed, which is pretty bad. There is some good news here, which is that with appropriate warnings by the &#8220;poll workers&#8221; the researchers were able to raise the detection rate to 85.7%, though it&#8217;s not clear how feasible it is to get poll workers to give those warnings.</p>
<h1 id="privacy%2Fsecrecy-of-the-ballot">Privacy/Secrecy of the Ballot</h1>
<p>The DRE privacy/secrecy story is also somewhat disappointing. There are two main ways that the system can leak how a voter voted: via <em>Cast Vote Records</em> (CVRs) and via the VVPAT paper record. A CVR is just an electronic representation of a given voter&#8217;s ballot stored on the DRE&#8217;s &#8220;disk&#8221;. In principle, you might think that you could just store the totals for each contest, but it&#8217;s convenient to have CVRs around for a variety of reasons, including post-election analysis (looking for undervotes, possible tabulation errors, etc.) In any case, it&#8217;s common practice to record them and the <a href="https://www.eac.gov/voting-equipment/voluntary-voting-system-guidelines">Voluntary Voting Systems Guidelines (VVSG)</a> promulgated by the US Election Assistance Commission encourage vendors to do so. This isn&#8217;t necessarily a problem if CVRs are handled correctly, but it must be impossible to link a CVR back to a voter. This means they have to be stored in a random order with no identifying marks that lead back to voter sequence. Historically, manufacturers have not always gotten this right, as, for instance, the California TTBR found (See <a href="https://votingsystems.cdn.sos.ca.gov/oversight/ttbr/sequoia-source-public-jul26.pdf">Section 4.4.8</a> and <a href="https://votingsystems.cdn.sos.ca.gov/oversight/ttbr/Hart-source-public.pdf">Section 6.8</a>). These problems can also exist with precinct count optical scan systems, but I forgot to mention it in my post on them. Sorry about that. Even if this part is done correctly, there are risks of pattern voting attacks in which the voter casts their ballot in a specific unique way, though again this can happen with optical scan.</p>
<p>The VVPAT also presents a problem. As described above, VVPATs are typically one long strip of paper, with the result that the VVPAT reflects the order in which votes were cast. An attacker who can observe the order in which voters voted and who also has access to the VVPAT can easily determine how each voter voted. This issue can be mostly mitigated with election procedures which <a href="https://www.flickr.com/photos/joebeone/2072175032/in/album-72157603320189384/">cut the VVPAT roll apart</a> prior to usage, but absent those procedures it represents a risk.</p>
<h1 id="ballot-marking-devices">Ballot Marking Devices</h1>
<p>The final thing I want to cover in this post is what&#8217;s called a <em>Ballot Marking Device</em> (BMD) [also known as an <em>Electronic Ballot Marker</em> (EBM)]. BMDs have gained popularity in recent years &#8212; especially with people from the computer science voting security community &#8212; as a design that tries to blend some of the good parts of DREs with some of the good parts of paper ballots. For example, the <a href="https://voting.works/">Voting Works</a> open source machine design is an BMD, as is Los Angeles&#8217;s new <a href="https://vsap.lavote.net/">VSAP</a> machine.</p>
<p>A BMD is conceptually similar to DRE but with two important differences:</p>
<ol>
<li>It doesn&#8217;t have a VVPAT but instead prints out a ballot which can be fed into an optical scanner.</li>
<li>Because the actual ballot counting is done by the scanner, you don&#8217;t need the machine to count votes, so it doesn&#8217;t need to store CVRs or maintain vote totals.</li>
</ol>
<p>BMDs address the privacy issues with DREs fairly effectively: you don&#8217;t need to store CVRs in the machine and the ballots are to some extent randomized in the ballot boxes and handling process. They also partly address the scaling issues: while BMDs aren&#8217;t any cheaper, if a long line develops you can fall back to hand-marked optical scan ballots without disrupting any of your back-end processes.</p>
<p>It&#8217;s less clear that they address the security issues: a compromised BMD can cheat just as much as a compromised DRE and so they still rely on the voter checking their ballot. There have been some somewhat tricky attacks proposed on DREs where the attacker controls the printer in a way that fools the user about the VVPAT record and these can&#8217;t be mounted with a BMD, but it&#8217;s not clear how practical those attacks are in any case. Probably the biggest security advantage of a BMD is that you don&#8217;t need to worry about trusting the machine count or the communications channel back from the machine: you just count the opscan ballots without having to mess around with the VVPAT.<sup class="footnote-ref"><a id="fnref5" href="#fn5">[5]</a> </sup> And of course because they&#8217;re fundamentally just a mechanism for printing paper ballots, it&#8217;s straightforward to fall back to paper in case of failure or long lines.</p>
<h1 id="up-next%3A-post-election-audits">Up Next: Post-Election Audits</h1>
<p>We&#8217;ve now covered all the major methods used for casting and counting votes. That&#8217;s just the beginning, though: if you want to have confidence in an election you need to be able to audit the results. That&#8217;s a topic that deserves its own post.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item">For instance, Santa Clara county produces ballots in English, Chinese, Spanish, Tagalog, and Vietnamese, Hindi, Japanese, Khmer, and Korean. <a class="footnote-backref" href="#fnref1">&#x21a9;︎</a></li>
<li id="fn2" class="footnote-item">Punch cards are an <a href="https://verifiedvoting.org/election-system/ess-votomatic/">old system</a> with some interesting properties. The voter marks their ballot by punching holes in a punch card. The card itself has no candidates written on it but is instead inserted into a holder that lists the contests and choices. The card itself is then read by a standard <a href="https://en.wikipedia.org/wiki/Punched_card_input/output">punch card reader</a>. This seems like it ought to be fairly straightforward but went wrong in a number of ways in Florida due to a combination of poor ballot design and an unfortunate technical failure mode: it was possible to punch the cards incompletely and as the voting machine filled up with <em>chads</em> (the little pieces of paper that you punched out), it would sometimes become harder to punch the ballot completely. This resulted in a number of ballots which had partially detached (&#8220;hanging&#8221;) chads or just dimpled chads, leading to debates about how to interpret them. Wikipedia has a pretty good <a href="https://en.wikipedia.org/wiki/Florida_election_recount">description</a> of what happened here. <a class="footnote-backref" href="#fnref2">&#x21a9;︎</a></li>
<li id="fn3" class="footnote-item">At least they should be obvious: It&#8217;s incredibly hard to write software that can resist compromise by a dedicated attacker who has direct access (this is why you have to keep upgrading your browser and operating system to fix security issues). Given the critical nature of voting machines, you really don&#8217;t want them attached to the Internet. <a class="footnote-backref" href="#fnref3">&#x21a9;︎</a></li>
<li id="fn4" class="footnote-item">In principle, this might leave statistical artifacts, such as a higher rate of correcting from Smith -&gt; Jones than Jones -&gt; Smith, but it would take a fair amount of work to be sure that this wasn&#8217;t just random error. <a class="footnote-backref" href="#fnref4">&#x21a9;︎</a></li>
<li id="fn5" class="footnote-item">We&#8217;ve touched on this a few times, but one of the real advantages of paper ballots is that they serve as a single common format for votes. Once you have that format, it&#8217;s possible to have multiple methods for writing (by hand, BMD) and reading (by hand, central count opscan, precinct count opscan) the ballots. That gives you increased flexibility because it means that you can innovate in one area without affecting others, as well as allowing either the writing side (voters) or reading side (election officials) to change its processes without affecting the other. This is a principle with applicability far beyond voting. Interoperable standardized data formats and protocols are a basic foundation of the Internet and the Web and much of what has made the rapid advancement of the Internet possible. <a class="footnote-backref" href="#fnref5">&#x21a9;︎</a></li>
</ol>
</section>
<hr />
<ul>
<li>Previous:</li>
</ul>
<p>&nbsp;</p>
<footer></footer>
<p>The post <a rel="nofollow" href="https://blog.mozilla.org/blog/2021/01/26/why-getting-voting-right-is-hard-part-v-dres-spoiler-theyre-bad/">Why getting voting right is hard, Part V: DREs (spoiler: they&#8217;re bad)</a> appeared first on <a rel="nofollow" href="https://blog.mozilla.org">The Mozilla Blog</a>.</p>
]]></content:encoded>
        </item>
    </channel>
</rss>